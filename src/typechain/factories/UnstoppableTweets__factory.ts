/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnstoppableTweets,
  UnstoppableTweetsInterface,
} from "../UnstoppableTweets";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "limit",
        type: "uint16",
      },
    ],
    name: "MessageExceedCharacterLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "UsernameNotCreated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "createNewTweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    name: "createNewUserName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTweets",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct UnstoppableTweets.Tweet[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "hasUserName",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweets",
    outputs: [
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userNames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cee806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063048b12e91461006757806314b2c7a91461009757806353256135146100b35780637f281635146100d1578063e52f9a7314610101578063e8d857b01461011d575b600080fd5b610081600480360381019061007c919061084b565b61014e565b60405161008e9190610a88565b60405180910390f35b6100b160048036038101906100ac9190610878565b6101a4565b005b6100bb610249565b6040516100c89190610a66565b60405180910390f35b6100eb60048036038101906100e6919061084b565b610390565b6040516100f89190610aa3565b60405180910390f35b61011b60048036038101906101169190610878565b610430565b005b610137600480360381019061013291906108c5565b6105c6565b604051610145929190610ac5565b60405180910390f35b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461019a90610bff565b9050119050919050565b818160328061ffff168383905011156101f457806040517f903d77480000000000000000000000000000000000000000000000000000000081526004016101eb9190610af5565b60405180910390fd5b84846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091906102419291906106a2565b505050505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561038757838290600052602060002090600202016040518060400160405290816000820180546102a090610bff565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610bff565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061026d565b50505050905090565b600060205280600052604060002060009150905080546103af90610bff565b80601f01602080910402602001604051908101604052809291908181526020018280546103db90610bff565b80156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b505050505081565b818160968061ffff1683839050111561048057806040517f903d77480000000000000000000000000000000000000000000000000000000081526004016104779190610af5565b60405180910390fd5b6104893361014e565b6104bf576040517f1d15067200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001604051806040016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019080519060200190610575929190610728565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b600181815481106105d657600080fd5b90600052602060002090600202016000915090508060000180546105f990610bff565b80601f016020809104026020016040519081016040528092919081815260200182805461062590610bff565b80156106725780601f1061064757610100808354040283529160200191610672565b820191906000526020600020905b81548152906001019060200180831161065557829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b8280546106ae90610bff565b90600052602060002090601f0160209004810192826106d05760008555610717565b82601f106106e957803560ff1916838001178555610717565b82800160010185558215610717579182015b828111156107165782358255916020019190600101906106fb565b5b50905061072491906107ae565b5090565b82805461073490610bff565b90600052602060002090601f016020900481019282610756576000855561079d565b82601f1061076f57805160ff191683800117855561079d565b8280016001018555821561079d579182015b8281111561079c578251825591602001919060010190610781565b5b5090506107aa91906107ae565b5090565b5b808211156107c75760008160009055506001016107af565b5090565b6000813590506107da81610c8a565b92915050565b60008083601f8401126107f6576107f5610c65565b5b8235905067ffffffffffffffff81111561081357610812610c60565b5b60208301915083600182028301111561082f5761082e610c6a565b5b9250929050565b60008135905061084581610ca1565b92915050565b60006020828403121561086157610860610c74565b5b600061086f848285016107cb565b91505092915050565b6000806020838503121561088f5761088e610c74565b5b600083013567ffffffffffffffff8111156108ad576108ac610c6f565b5b6108b9858286016107e0565b92509250509250929050565b6000602082840312156108db576108da610c74565b5b60006108e984828501610836565b91505092915050565b60006108fe8383610a1a565b905092915050565b61090f81610b76565b82525050565b61091e81610b76565b82525050565b600061092f82610b20565b6109398185610b43565b93508360208202850161094b85610b10565b8060005b85811015610987578484038952815161096885826108f2565b945061097383610b36565b925060208a0199505060018101905061094f565b50829750879550505050505092915050565b6109a281610b88565b82525050565b60006109b382610b2b565b6109bd8185610b54565b93506109cd818560208601610bcc565b6109d681610c79565b840191505092915050565b60006109ec82610b2b565b6109f68185610b65565b9350610a06818560208601610bcc565b610a0f81610c79565b840191505092915050565b60006040830160008301518482036000860152610a3782826109a8565b9150506020830151610a4c6020860182610906565b508091505092915050565b610a6081610b94565b82525050565b60006020820190508181036000830152610a808184610924565b905092915050565b6000602082019050610a9d6000830184610999565b92915050565b60006020820190508181036000830152610abd81846109e1565b905092915050565b60006040820190508181036000830152610adf81856109e1565b9050610aee6020830184610915565b9392505050565b6000602082019050610b0a6000830184610a57565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b8182610ba2565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610bea578082015181840152602081019050610bcf565b83811115610bf9576000848401525b50505050565b60006002820490506001821680610c1757607f821691505b60208210811415610c2b57610c2a610c31565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610c9381610b76565b8114610c9e57600080fd5b50565b610caa81610bc2565b8114610cb557600080fd5b5056fea264697066735822122092e4384311cf136cc409ecc57de47acb0482b71b3aa21ec111d66dd2e38356ad64736f6c63430008060033";

export class UnstoppableTweets__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnstoppableTweets> {
    return super.deploy(overrides || {}) as Promise<UnstoppableTweets>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnstoppableTweets {
    return super.attach(address) as UnstoppableTweets;
  }
  connect(signer: Signer): UnstoppableTweets__factory {
    return super.connect(signer) as UnstoppableTweets__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnstoppableTweetsInterface {
    return new utils.Interface(_abi) as UnstoppableTweetsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnstoppableTweets {
    return new Contract(address, _abi, signerOrProvider) as UnstoppableTweets;
  }
}
